g++ -o out main.cpp /opt/homebrew/Cellar/stp/2.3.3_4/lib/libstp.dylib -I /opt/homebrew/Cellar/stp/2.3.3_4/include
./out
COUNTEREXAMPLE BEGIN: 
ASSERT( a24 = 0b0 );
ASSERT( q9 = 0b0 );
ASSERT( a25 = 0b0 );
ASSERT( a21 = 0b0 );
ASSERT( q6 = 0b0 );
ASSERT( q30 = 0b0 );
ASSERT( q31 = 0b0 );
ASSERT( t6 = 0b1 );
ASSERT( q21 = 0b1 );
ASSERT( t7 = 0b0 );
ASSERT( q29 = 0b1 );
ASSERT( a20 = 0b0 );
ASSERT( q5 = 0b0 );
ASSERT( q28 = 0b1 );
ASSERT( q22 = 0b0 );
ASSERT( q27 = 0b0 );
ASSERT( q26 = 0b0 );
ASSERT( q25 = 0b1 );
ASSERT( q24 = 0b1 );
ASSERT( t5 = 0b1 );
ASSERT( q20 = 0b0 );
ASSERT( q23 = 0b0 );
ASSERT( t4 = 0b1 );
ASSERT( q18 = 0b0 );
ASSERT( q10 = 0b0 );
ASSERT( t3 = 0b1 );
ASSERT( q15 = 0b0 );
ASSERT( q13 = 0b0 );
ASSERT( q12 = 0b1 );
ASSERT( t2 = 0b1 );
ASSERT( q11 = 0b0 );
ASSERT( q8 = 0b1 );
ASSERT( t1 = 0b1 );
ASSERT( q7 = 0b0 );
ASSERT( q4 = 0b0 );
ASSERT( t0 = 0b0 );
ASSERT( q3 = 0b0 );
ASSERT( q2 = 0b0 );
ASSERT( q1 = 0b0 );
ASSERT( q0 = 0b0 );
ASSERT( b14 = 0b0 );
ASSERT( y0 = 0b1 );
ASSERT( b8 = 0b0 );
ASSERT( y6 = 0b0 );
ASSERT( y7 = 0b1 );
ASSERT( x6 = 0b1 );
ASSERT( x7 = 0b1 );
ASSERT( y5 = 0b1 );
ASSERT( x4 = 0b1 );
ASSERT( x5 = 0b0 );
ASSERT( y2 = 0b1 );
ASSERT( y3 = 0b1 );
ASSERT( x2 = 0b0 );
ASSERT( x3 = 0b1 );
ASSERT( y1 = 0b0 );
ASSERT( b10 = 0b0 );
ASSERT( x0 = 0b0 );
ASSERT( x1 = 0b0 );
ASSERT( b9 = 0b0 );
ASSERT( a0 = 0b0 );
ASSERT( a23 = 0b1 );
ASSERT( a1 = 0b1 );
ASSERT( a2 = 0b1 );
ASSERT( a3 = 0b0 );
ASSERT( a4 = 0b0 );
ASSERT( a5 = 0b0 );
ASSERT( a6 = 0b0 );
ASSERT( a7 = 0b0 );
ASSERT( a8 = 0b0 );
ASSERT( a9 = 0b1 );
ASSERT( a10 = 0b0 );
ASSERT( a11 = 0b1 );
ASSERT( a12 = 0b0 );
ASSERT( a13 = 0b0 );
ASSERT( a14 = 0b0 );
ASSERT( a15 = 0b0 );
ASSERT( a16 = 0b0 );
ASSERT( a17 = 0b0 );
ASSERT( a18 = 0b0 );
ASSERT( a22 = 0b0 );
ASSERT( b7 = 0b0 );
ASSERT( b11 = 0b0 );
ASSERT( b12 = 0b1 );
ASSERT( b13 = 0b0 );
ASSERT( b15 = 0b1 );
ASSERT( a19 = 0b0 );
ASSERT( a26 = 0b1 );
ASSERT( a27 = 0b0 );
ASSERT( b0 = 0b0 );
ASSERT( b1 = 0b0 );
ASSERT( b2 = 0b0 );
ASSERT( b3 = 0b0 );
ASSERT( b4 = 0b1 );
ASSERT( b5 = 0b1 );
ASSERT( b6 = 0b0 );
ASSERT( y4 = 0b1 );
ASSERT( q17 = 0b1 );
ASSERT( q14 = 0b0 );
ASSERT( q19 = 0b0 );
ASSERT( q16 = 0b0 );
COUNTEREXAMPLE END: 
counter_a: 28/28
